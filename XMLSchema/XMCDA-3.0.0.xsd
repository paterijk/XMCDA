<?xml version="1.0" encoding="UTF-8" ?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.decision-deck.org/2013/XMCDA-3.0.0" xmlns:xmcda="http://www.decision-deck.org/2013/XMCDA-3.0.0">

	<xs:annotation>
		<xs:documentation> XMCDA 3.0.0 Schema proposal Patrick MEYER and SÃ©bastien BIGARET (Telecom Bretagne) </xs:documentation>
	</xs:annotation>


	<!-- Root elements -->


	<xs:element name="XMCDA">

		<xs:annotation>
			<xs:documentation>Root of the XMCDA tree.</xs:documentation>
		</xs:annotation>

		<xs:complexType>

			<xs:sequence>

				<!--				<xs:element name="description" type="xmcda:projectDescription" minOccurs="0" maxOccurs="unbounded"/>-->

				<!--				<xs:element name="methodMessages" type="xmcda:methodMessages" minOccurs="0" maxOccurs="unbounded"/>-->

				<!--				<xs:element name="methodParameters" type="xmcda:methodParameters" minOccurs="0" maxOccurs="unbounded"/>-->

				<!-- definition of the alternatives -->

				<xs:element name="alternatives" type="xmcda:alternatives" minOccurs="0" maxOccurs="unbounded"/>

				<!-- definition of the criteria -->

				<xs:element name="criteria" type="xmcda:criteria" minOccurs="0" maxOccurs="unbounded"/>			

				<!-- definition of the categories -->

				<xs:element name="categories" type="xmcda:categories" minOccurs="0" maxOccurs="unbounded"/>

				<!-- the performance table -->

				<xs:element name="performanceTable" type="xmcda:performanceTable" minOccurs="0" maxOccurs="unbounded"/>

				<!-- a hierarchy on criteria, alternatives, attributes, categories -->

				<!-- <xs:element name="hierarchy" type="xmcda:hierarchy" minOccurs="0" maxOccurs="unbounded"/>-->

				<!-- data linked to criteria -->

				<xs:element name="criteriaSets" type="xmcda:criteriaSets" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="criteriaFunctions" type="xmcda:criteriaFunctions" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="criteriaScales" type="xmcda:criteriaScales" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="criteriaThresholds" type="xmcda:criteriaThresholds" minOccurs="0" maxOccurs="unbounded"/>
				
				<xs:element name="criteriaValues" minOccurs="0" maxOccurs="unbounded" type="xmcda:criteriaValues"/>
				<xs:element name="criteriaComparisons" minOccurs="0" maxOccurs="unbounded" type="xmcda:criteriaComparisons"/>
				<xs:element name="criteriaLinearConstraints" minOccurs="0" maxOccurs="unbounded" type="xmcda:criteriaLinearConstraints"/>
				<xs:element name="criteriaMatrix" minOccurs="0" maxOccurs="unbounded" type="xmcda:criteriaMatrix"/>

				<!-- data linked to alternatives -->

				<xs:element name="alternativesSets" type="xmcda:alternativesSets" minOccurs="0" maxOccurs="unbounded"/>

				<xs:element name="alternativesValues" minOccurs="0" maxOccurs="unbounded" type="xmcda:alternativesValues"/>
				<xs:element name="alternativesComparisons" minOccurs="0" maxOccurs="unbounded" type="xmcda:alternativesComparisons"/>
				<xs:element name="alternativesLinearConstraints" minOccurs="0" maxOccurs="unbounded" type="xmcda:alternativesLinearConstraints"/>
				<xs:element name="alternativesMatrix" minOccurs="0" maxOccurs="unbounded" type="xmcda:alternativesMatrix"/>

				<!-- data linked to alternatives and criteria -->

				<xs:element name="alternativesCriteriaValues" minOccurs="0" maxOccurs="unbounded" type="xmcda:alternativesCriteriaValues"/>

				<!-- data linked to categories -->
				
				<xs:element name="categoriesSets" type="xmcda:categoriesSets" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="categoriesProfiles" minOccurs="0" maxOccurs="unbounded" type="xmcda:categoriesProfiles" />
				<xs:element name="alternativesAssignments" minOccurs="0" maxOccurs="unbounded" type="xmcda:alternativesAssignments"/>
				<xs:element name="categoriesValues" minOccurs="0" maxOccurs="unbounded" type="xmcda:categoriesValues"/>
				<xs:element name="categoriesComparisons" minOccurs="0" maxOccurs="unbounded" type="xmcda:categoriesComparisons"/>
				<xs:element name="categoriesLinearConstraints" minOccurs="0" maxOccurs="unbounded" type="xmcda:categoriesLinearConstraints"/>
				<xs:element name="categoriesMatrix" minOccurs="0" maxOccurs="unbounded" type="xmcda:categoriesMatrix"/>

			</xs:sequence>

		</xs:complexType>

	</xs:element>

	<!-- XMCDA types declarations -->

	<xs:attributeGroup name="defaultAttributes">
		<xs:annotation>
			<xs:documentation>Group of attributes used for all the main tags.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="id" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>The id attribute allows to identify the underlying piece of data by a program.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>The name attribute contains the human readable name of the object or concept.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="mcdaConcept" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>The mcdaConcept attribute allows to specify to what mcda concept a tag is related. It is used by an algorithm to make choices which will have an influence on the output. The documentation of the program should therefore specify, if necessary, what mcdaConcept should be used for the input data. In particular, if an algorithm requires, among other things, twice the same input tag, they can be differenciated by the mcdaConcept (this is even mandatory if they are present in the same file, but should be optional if the two tags can be in different input files, or originate from two different programs). The algorithm should therefore not be too strict on these mcdaConcepts, as this will reduce the compatibility between the various programs. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>

	<xs:attributeGroup name="defaultAttributesIDRequired">
		<xs:annotation>
			<xs:documentation>Group of attributes used for all the main tags. The id attribute is mandatory.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="id" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The mandatory id attribute allows to identify the underlying piece of data by a program.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>The name attribute contains the human readable name of the object or concept.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="mcdaConcept" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>The mcdaConcept attribute allows to specify to what mcda concept a tag is related. It is used by an algorithm to make choices which will have an influence on the output. The documentation of the program should therefore specify, if necessary, what mcdaConcept should be used for the input data. In particular, if an algorithm requires, among other things, twice the same input tag, they can be differenciated by the mcdaConcept (this is even mandatory if they are present in the same file, but should be optional if the two tags can be in different input files, or originate from two different programs). The algorithm should therefore not be too strict on these mcdaConcepts, as this will reduce the compatibility between the various programs. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>




	<xs:complexType name="description">
		<xs:annotation>
			<xs:documentation>Description of most of the tags. The names of the elements suggest their standard use.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="author" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
			<xs:element name="comment" minOccurs="0" maxOccurs="1" type="xs:string"/>
			<xs:element name="keyword" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
			<xs:element name="bibliography" minOccurs="0" maxOccurs="1" type="xmcda:bibliography"/>
			<xs:element name="creationDate" minOccurs="0" maxOccurs="1" type="xs:dateTime"/>
			<xs:element name="lastModificationDate" minOccurs="0" maxOccurs="1" type="xs:dateTime"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="bibliography">
		<xs:annotation>
			<xs:documentation>Bibliographical entries</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0" maxOccurs="1"/>
			<xs:element name="bibEntry" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<!-- alternatives -->

	<xs:complexType name="alternatives">
		<xs:annotation>
			<xs:documentation>Definition of alternatives.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0" maxOccurs="1"/>
			<xs:element name="alternative" type="xmcda:alternative" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<xs:complexType name="alternative">
		<xs:annotation>
			<xs:documentation>Definition of an alternative. The id attribute is mandatory.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0" maxOccurs="1"/>
			<xs:element name="type" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type Indicates whether an alternative is real or fictive. By default, if the tag is not present, an alternative is considered as real. Fictive alternatives are those which might not exist in reality, but can be used for some preference elicitation means.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="real"/>
						<xs:enumeration value="fictive"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="active" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Active indicates whether an alternative is active or not in the calculations. By default, if the tag is not present, an alternative is considered as active (true).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributesIDRequired"/>
	</xs:complexType>
	
	<xs:complexType name="alternativesSets">
		<xs:annotation>
			<xs:documentation>Definition of sets of alternatives.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="alternativesSet" type="xmcda:alternativesSet" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativesSet">
		<xs:annotation>
			<xs:documentation>Definition of a set of alternatives. Each element can be valued (to represent valued or ordered sets).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="element" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="alternativeID" type="xs:string"/>
						<xs:element name="values" minOccurs="0" maxOccurs="1" type="xmcda:values"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativesValues">
		<xs:annotation>
			<xs:documentation>Values related to alternatives. Can for example be used to store overall values of alternatives, or their rank in a ranking.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="alternativeValue" type="xmcda:alternativeValue" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativeValue">
		<xs:annotation>
			<xs:documentation>Value or values related to an alternative or a set of alternatives. Can for example be used to store the overall value of an alternative, or its rank.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:choice>
				<xs:element name="alternativeID" type="xs:string"/>
				<xs:element name="alternativesSetID" type="xs:string"/>
			</xs:choice>
			<xs:element name="values" type="xmcda:values" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativeReference">
		<xs:annotation>
			<xs:documentation>Type to reference an alternative or a set of alternatives by their id.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="alternativeID" type="xs:string"/>
			<xs:element name="alternativesSetID" type="xs:string"/>
		</xs:choice>
	</xs:complexType>
	
	<xs:complexType name="alternativesComparisons">
		<xs:annotation>
			<xs:documentation>Valued relation on alternatives. The type of relation can be specified in the mcdaConcept attribute.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="valuation" type="xmcda:scale" minOccurs="0"/>
			<xs:element name="pairs">
				<xs:annotation>
					<xs:documentation>Pairs of alternatives or sets of alternatives.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="pair" minOccurs="1" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="initial" type="xmcda:alternativeReference"/>
									<xs:element name="terminal" type="xmcda:alternativeReference"/>
									<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativesMatrix">
		<xs:annotation>
			<xs:documentation>Matrix of values related to alternatives or sets of alternatives.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="valuation" type="xmcda:scale" minOccurs="0"/>
			<xs:element name="row" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>Row of a matrix.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:choice>
							<xs:element name="alternativeID" type="xs:string"/>
							<xs:element name="alternativesSetID" type="xs:string"/>
						</xs:choice>
						<xs:element name="column" minOccurs="1" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice>
										<xs:element name="alternativeID" type="xs:string"/>
										<xs:element name="alternativesSetID" type="xs:string"/>
									</xs:choice>
									<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativesLinearConstraints">
		<xs:annotation>
			<xs:documentation>Linear constraints on the alternatives.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constraint" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>A linear constraint related to alternatives or sets of alternatives. It is composed of a sum of elements, each element being composed of an alternative or a set of alternatives and a coefficient. The rhs allows to specify the value of the right hand side. The values linked to each constraint can represent a credibility of this constraint in the eyes of a decision maker, for example.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="element" minOccurs="1" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice>
										<xs:element name="alternativeID" type="xs:string"/>
										<xs:element name="alternativesSetID" type="xs:string"/>
									</xs:choice>
									<xs:element name="coefficient" type="xmcda:numericValue" minOccurs="1" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="rhs" type="xmcda:numericValue"/>
						<xs:element name="operator" minOccurs="1">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="geq"/>
									<xs:enumeration value="eq"/>
									<xs:enumeration value="leq"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="values" type="xmcda:values"  minOccurs="0" maxOccurs="1"/>
					</xs:sequence>
					<xs:attributeGroup ref="xmcda:defaultAttributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	

	<!-- criteria -->

	<xs:complexType name="criteria">
		<xs:annotation>
			<xs:documentation>Definition of criteria.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" minOccurs="0" type="xmcda:description"/>
			<xs:element name="criterion" minOccurs="1" maxOccurs="unbounded" type="xmcda:criterion"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<xs:complexType name="criterion">
		<xs:annotation>
			<xs:documentation>Definition of a criterion. The id attribute is mandatory.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="active" type="xs:boolean" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Indicates whether a criterion is active or not in the calculations. By default, if the tag is not present, the criterion is considered to be active (true).</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributesIDRequired"/>
	</xs:complexType>

	<xs:complexType name="criteriaFunctions">
		<xs:annotation>
			<xs:documentation>Functions related to criteria. For example value functions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0" maxOccurs="1"/>
			<xs:element name="criterionFunction" type="xmcda:criterionFunction" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<xs:complexType name="criterionFunction">
		<xs:annotation>
			<xs:documentation>Function related to a criterion, to store for example a value function.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0" maxOccurs="1"/>
			<xs:element name="criterionID" type="xs:string"/>
			<xs:element name="functions" minOccurs="1" maxOccurs="1">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="function" type="xmcda:function"  minOccurs="1" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<xs:complexType name="criteriaThresholds">
		<xs:annotation>
			<xs:documentation>Thresholds related to criteria (typically discrimination thresholds).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="criterionThreshold" type="xmcda:criterionThreshold" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<xs:complexType name="criterionThreshold">
		<xs:annotation>
			<xs:documentation>Threshold related to a criterion, to represent for example discrimination thresholds in outranking methods. The type of the threshold is specified in the mcdaConcept attribute of each threshold, and documented in each algorithm.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0" maxOccurs="1"/>
			<xs:element name="criterionID" type="xs:string"/>
			<xs:element name="thresholds" minOccurs="1" maxOccurs="1">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>One or more discrimination thresholds related to a criterion.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="description" type="xmcda:description" minOccurs="0"/>
						<xs:element name="threshold" type="xmcda:function"  minOccurs="1" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="xmcda:defaultAttributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criteriaScales">
		<xs:annotation>
			<xs:documentation>Scales related to criteria (typically evaluation scales).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="criterionScale" type="xmcda:criterionScale" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criterionScale">
		<xs:annotation>
			<xs:documentation>Evaluation scale related to a criterion.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0" maxOccurs="1"/>
			<xs:element name="criterionID" type="xs:string"/>
			<xs:element name="scales" minOccurs="1" maxOccurs="1">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>One or more scales related to a criterion.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="description" type="xmcda:description" minOccurs="0"/>
						<xs:element name="scale" type="xmcda:scale"  minOccurs="1" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="xmcda:defaultAttributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criteriaSets">
		<xs:annotation>
			<xs:documentation>Definition of criteria sets.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="criteriaSet" type="xmcda:criteriaSet" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criteriaSet">
		<xs:annotation>
			<xs:documentation>A set of criteria, where the elements can be valued. An emty set of criteria can also be represented when no element is present.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="element" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="criterionID" type="xs:string"/>
						<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="1"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criteriaValues">
		<xs:annotation>
			<xs:documentation>A sequence of criteria-related values.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="criterionValue" type="xmcda:criterionValue" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criterionValue">
		<xs:annotation>
			<xs:documentation>One or more values related to a criterion or a set of criteria.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:choice>
				<xs:element name="criterionID" type="xs:string"/>
				<xs:element name="criteriaSetID" type="xs:string"/>
			</xs:choice>
			<xs:element name="values" type="xmcda:values" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criteriaComparisons">
		<xs:annotation>
			<xs:documentation>A valued binary relation on the criteria. The type of relation can be specified in the mcdaConcept attribute.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="valuation" type="xmcda:scale" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the scale of the valuation of the relation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="pairs">
				<xs:annotation>
					<xs:documentation>A sequence of pairs of criteria or criteria sets. Each pair is defined by its initial and terminal elements, and can be valued.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="pair" minOccurs="1" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="initial" type="xmcda:criterionReference"/>
									<xs:element name="terminal" type="xmcda:criterionReference"/>
									<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criteriaMatrix">
		<xs:annotation>
			<xs:documentation>Generic type for a matrix on criteria.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="valuation" type="xmcda:scale" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the scale of the values in the matrix.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="row" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>A row of the matrix.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:choice>
							<xs:element name="criterionID" type="xs:string"/>
							<xs:element name="criteriaSetID" type="xs:string"/>
						</xs:choice>
						<xs:element name="column" maxOccurs="unbounded">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation>A column of the matrix.</xs:documentation>
								</xs:annotation>
								<xs:sequence>
									<xs:choice>
										<xs:element name="criterionID" type="xs:string"/>
										<xs:element name="criteriaSetID" type="xs:string"/>
									</xs:choice>
									<xs:element name="values" type="xmcda:values" minOccurs="1" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="criterionReference">
		<xs:annotation>
			<xs:documentation>Type to reference a criterion or a set of criteria by their id.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="criterionID" type="xs:string"/>
			<xs:element name="criteriaSetID" type="xs:string"/>
		</xs:choice>
	</xs:complexType>
	
	<xs:complexType name="criteriaLinearConstraints">
		<xs:annotation>
			<xs:documentation>Represents a set of linear constraints on the criteria.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constraint" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>A linear constraint related to criteria. It is constructed from a sum of elements, each element being composed of a reference to a criterion or a set of criteria, and a multiplicative coefficient. The right hand side is specified separately, and the operator is either geq, leq or eq. Values can also be assigned to each constraint, to represent, e.g., a credibility of the constraint.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="description" type="xmcda:description" minOccurs="0" maxOccurs="1"/>
						<xs:element name="element"  maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice>
										<xs:element name="criterionID" type="xs:string"/>
										<xs:element name="criteriaSetID" type="xs:string"/>
									</xs:choice>
									<xs:element name="coefficient" type="xmcda:numericValue"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="rhs" type="xmcda:numericValue"/>
						<xs:element name="operator" minOccurs="1">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="geq"/>
									<xs:enumeration value="eq"/>
									<xs:enumeration value="leq"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="values" type="xmcda:values"  minOccurs="0" maxOccurs="1"/>
					</xs:sequence>
					<xs:attributeGroup ref="xmcda:defaultAttributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<!-- mixed types for alternatives and criteria -->
	
	<xs:complexType name="alternativesCriteriaValues">
		<xs:annotation>
			<xs:documentation>A crosstable alternatives x criteria.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="alternativeCriteriaValues" type="xmcda:alternativeCriteriaValues" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativeCriteriaValues">
		<xs:annotation>
			<xs:documentation>A row in a crosstable alternatives x criteria.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" minOccurs="0" type="xmcda:description"/>
			<xs:element name="alternativeID" minOccurs="1" type="xs:string"/>
			<xs:element name="criterionValue" type="xmcda:criterionValue" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>


	<!-- categories -->

	<xs:complexType name="categories">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>Definition of the categories.</xs:documentation>
			</xs:annotation>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="category" type="xmcda:category" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<xs:complexType name="category">
		<xs:annotation>
			<xs:documentation>Definition of a category. The id attribute is mandatory.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="active" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates whether a category is active or not in the calculations. By default, if the tag is not present, the category is considered to be active (true).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributesIDRequired"/>
	</xs:complexType>
	
	<xs:complexType name="categoriesSets">
		<xs:annotation>
			<xs:documentation>A sequence of categories sets.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="categoriesSet" type="xmcda:categoriesSet" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoriesSet">
		<xs:annotation>
			<xs:documentation>A set of categories, where each element can possibly be valued. An empty set of categories is obtained when no element is present.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="element" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="categoryID" type="xs:string"/>
						<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="1"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoriesValues">
		<xs:annotation>
			<xs:documentation>A sequence of values related to categories.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="categoryValue" type="xmcda:categoryValue" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoryValue">
		<xs:annotation>
			<xs:documentation>A value or values related to a category or a set of categories.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:choice>
				<xs:element name="categoryID" type="xs:string"/>
				<xs:element name="categoriesSetID" type="xs:string"/>
			</xs:choice>
			<xs:element name="values" type="xmcda:values" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoriesComparisons">
		<xs:annotation>
			<xs:documentation>A valued binary relation on categories. The type of relation can be specified in the mcdaConcept attribute.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="valuation" type="xmcda:scale" minOccurs="0"/>
			<xs:element name="pairs">
				<xs:annotation>
					<xs:documentation>A set of pairs of categories.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="pair" minOccurs="1" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="description" type="xmcda:description" minOccurs="0"/>
									<xs:element name="initial" type="xmcda:categoryReference"/>
									<xs:element name="terminal" type="xmcda:categoryReference"/>
									<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoriesMatrix">
		<xs:annotation>
			<xs:documentation>A matrix of values related to categories.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="valuation" type="xmcda:scale" minOccurs="0"/>
			<xs:element name="row" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>A row of a matrix.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:choice>
							<xs:element name="categoryID" type="xs:string"/>
							<xs:element name="categoriesSetID" type="xs:string"/>
						</xs:choice>
						<xs:element name="column" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice>
										<xs:element name="categoryID" type="xs:string"/>
										<xs:element name="categoriesSetID" type="xs:string"/>
									</xs:choice>
									<xs:element name="values" type="xmcda:values" minOccurs="1" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoriesLinearConstraints">
		<xs:annotation>
			<xs:documentation>Represents a set of linear constraints on the categories.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constraint" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>A linear constraint related to categories.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="element"  minOccurs="1" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice minOccurs="1">
										<xs:element name="categoryID" type="xs:string"/>
										<xs:element name="categoriesSetID" type="xs:string"/>
									</xs:choice>
									<xs:element name="coefficient" type="xmcda:numericValue"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="rhs" type="xmcda:numericValue"/>
						<xs:element name="operator" minOccurs="1">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="geq"/>
									<xs:enumeration value="eq"/>
									<xs:enumeration value="leq"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="values" type="xmcda:values"  minOccurs="0" maxOccurs="1"/>
					</xs:sequence>
					<xs:attributeGroup ref="xmcda:defaultAttributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoryReference">
		<xs:annotation>
			<xs:documentation>Type to reference a category or a set of categories by their id.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="categoryID" type="xs:string"/>
			<xs:element name="categoriesSetID" type="xs:string"/>
		</xs:choice>
	</xs:complexType>
	
	<xs:complexType name="categoriesProfiles">
		<xs:annotation>
			<xs:documentation>A sequence of category profiles</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="categoryProfile" minOccurs="0" maxOccurs="unbounded" type="xmcda:categoryProfile"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoryProfile">
		<xs:annotation>
			<xs:documentation>Description of a category by bounding profiles or central profiles.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="categoryID" type="xs:string" minOccurs="0"/>
			<xs:choice>
				<xs:element name="central">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="alternativeID" type="xs:string"/>
							<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="bounding">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="lowerBound">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="alternativeID" type="xs:string"/>
										<xs:element name="values" type="xmcda:values"  minOccurs="0" maxOccurs="1"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="upperBound">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="alternativeID" type="xs:string"/>
										<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="1"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativesAssignments">
		<xs:annotation>
			<xs:documentation>A sequence of assignments of alternatives to categories.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="alternativeAssignment" type="xmcda:alternativeAssignment" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativeAssignment">
		<xs:annotation>
			<xs:documentation>An assignment of an alternative or a set of alternatives to a category, a set of categories or an interval of categories.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:choice>
				<xs:element name="alternativeID" type="xs:string"/>
				<xs:element name="alternativesSetID" type="xs:string"/>
			</xs:choice>
			<xs:choice>
				<xs:element name="categoryID" type="xs:string"/>
				<xs:element name="categoriesSetID" type="xs:string"/>
				<xs:element name="categoriesInterval" type="xmcda:categoriesInterval"/>
			</xs:choice>
			<xs:element name="values" type="xmcda:values" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="categoriesInterval">
		<xs:annotation>
			<xs:documentation>An interval of categories.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xmcda:description" minOccurs="0"/>
			<xs:element name="lowerBound" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="categoryID" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="upperBound" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="categoryID" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<!-- Other types -->

	<xs:complexType name="scale">
		<xs:annotation>
			<xs:documentation>Evaluation scale. Choice between 3 types of scales: nominal, qualitative and quantitative.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="nominal" type="xmcda:nominal"/>
				<xs:element name="qualitative" type="xmcda:qualitative"/>
				<xs:element name="quantitative" type="xmcda:quantitative"/>
			</xs:choice>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<xs:complexType name="nominal">
		<xs:annotation>
			<xs:documentation>Scale type of unordered labels.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="labels">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>Sequence of labels.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="label" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>	
			</xs:element>
			
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="qualitative">
		<xs:annotation>
			<xs:documentation>Scale type of qualitative ordered levels. Described by a preference direction and either classical ranked labels or fuzzy labels (via valued labels in both cases).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="preferenceDirection" type="xmcda:preferenceDirection" minOccurs="0"/>
			<xs:choice>
				<xs:element name="valuedLabels">
					<xs:complexType>
						<xs:annotation>
							<xs:documentation>Sequence of valued labels. Could either be labels to which are associated ranks, or fuzzy labels.</xs:documentation>
						</xs:annotation>
						<xs:sequence>
							<xs:element name="valuedLabel" type="xmcda:valuedLabel" minOccurs="1" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="quantitative">
		<xs:annotation>
			<xs:documentation>Scale type which is quantitative. It is described by a preference direction (min or max), and a minimal and maximal quantitative evaluation.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="preferenceDirection" type="xmcda:preferenceDirection" minOccurs="0"/>
			<xs:element name="minimum" type="xmcda:numericValue" minOccurs="0"/>
			<xs:element name="maximum" type="xmcda:numericValue" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="preferenceDirection">
		<xs:annotation>
			<xs:documentation>Preferential direction on a given quantitative or qualitative scale: either "max" for a scale where the higher values are preferred, or "min" for a scale where the lower values are preferred.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="min"/>
			<xs:enumeration value="max"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="numericValue">
		<xs:annotation>
			<xs:documentation>Restriction of the "value" type to simple values of type: integer, real, rational and NA.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:restriction base="xmcda:value">
				<xs:sequence>
					<xs:choice>
						<xs:element name="integer" type="xs:int"/>
						<xs:element name="real" type="xs:float"/>
						<xs:element name="rational" type="xmcda:rational"/>
						<xs:element name="NA" type="xmcda:NA"/>
					</xs:choice>
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="value">
		<xs:annotation>
			<xs:documentation>General value type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="integer" type="xs:int"/>
				<xs:element name="real" type="xs:float"/>
				<xs:element name="interval" type="xmcda:interval"/>
				<xs:element name="rational" type="xmcda:rational"/>
				<xs:element name="label" type="xs:string"/>
				<xs:element name="boolean" type="xs:boolean"/>
				<xs:element name="NA" type="xmcda:NA"/>
				<xs:element name="fuzzyNumber" type="xmcda:membershipFunction"/>
				<xs:element name="valuedLabel" type="xmcda:valuedLabel"/>
			</xs:choice>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="values">
		<xs:annotation>
			<xs:documentation>Sequence of values.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="value" type="xmcda:value" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="interval">
		<xs:annotation>
			<xs:documentation>Interval via a lower and an upper bound, which are values. The lower and the upper bounds are not mandatory, which allows to specify "infinite" bounds.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="lowerBound" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Lower bound of the interval. Attribute "open" allows to specify if the value is included in the interval (false) or not (true). By default, the value is included (false).</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="xmcda:value">
							<xs:attribute name="open" type="xs:boolean"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="upperBound" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Upper bound of an interval. Attribute "open" allows to specify if the value is included in the interval (false) or not (true). By default, the value is included (false).</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="xmcda:value">
							<xs:attribute name="open" type="xs:boolean"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="NA">
		<xs:complexContent>
			<xs:restriction base="xs:anyType"/>
		</xs:complexContent>
	</xs:complexType>



	<xs:complexType name="rational">
		<xs:annotation>
			<xs:documentation>Rational number described by the numerator and the denominator, which are both integers.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="numerator" type="xs:int"/>
			<xs:element name="denominator" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="valuedLabel">
		<xs:annotation>
			<xs:documentation>Label to which is associated a value. Can be used to represent ranks of ordinal labels, or fuzzy labels for example. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="label" type="xs:string"/>
			<xs:element name="value" type="xmcda:value"/>
		</xs:sequence>
	</xs:complexType>
	
	
	<xs:complexType name="membershipFunction">
		<xs:annotation>
			<xs:documentation>Restriction of the "function" type to functions compatible with fuzzy numbers.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:restriction base="xmcda:function">
					<xs:choice>
						<xs:element name="piecewiseLinear" type="xmcda:piecewiseLinear"/>
					</xs:choice>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	
	
	<xs:complexType name="piecewiseLinear">
		<xs:annotation>
			<xs:documentation>Piecewise linear function defined by a sequence of segments.</xs:documentation>
		</xs:annotation>
		
			<xs:sequence>
				<xs:element name="segment" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Segment, defined by two points: one for the head, one for the tail. An attribute in the head and the tail allows to specify if the point is included in the segment or not (open).</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="head">
								<xs:annotation>
									<xs:documentation>Head point of a segment. Attribute "open" allows to specify if the point is included in the segment (false) or not (true). By default, the point is included (false).</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:complexContent>
										<xs:extension base="xmcda:point">
											<xs:attribute name="open" type="xs:boolean"/>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="tail">
								<xs:annotation>
									<xs:documentation>Tail point of a segment. Attribute "open" allows to specify if the point is included in the segment (false) or not (true). By default, the point is included (false).</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:complexContent>
										<xs:extension base="xmcda:point">
											<xs:attribute name="open" type="xs:boolean"/>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		
	</xs:complexType>
	
	<xs:complexType name="point">
		<xs:annotation>
			<xs:documentation>Point defined by an abscissa and an ordinate.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="abscissa" type="xmcda:value">
				<xs:annotation>
					<xs:documentation>The abscissa of a point.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ordinate" type="xmcda:value">
				<xs:annotation>
					<xs:documentation>The ordinate of a point.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="function">
		<xs:annotation>
			<xs:documentation>A general function which can be of one of the following four types: either a constant, a linear function (defined by a slope and an intercept), a piecewise linear function (defined by a sequence of segments), or a set of points.</xs:documentation>
		</xs:annotation>
			<xs:choice>
				<xs:element name="constant" type="xmcda:numericValue"/>
				<xs:element name="linear">
					<xs:annotation>
						<xs:documentation>Linear function. Requires a slope and an intercept.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="slope" type="xmcda:numericValue"/>
							<xs:element name="intercept" type="xmcda:numericValue"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="piecewiseLinear" type="xmcda:piecewiseLinear"/>
				<xs:element name="discrete">
					<xs:annotation>
						<xs:documentation>A discrete function defined by a sequence of points.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="point" type="xmcda:point" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>

	<xs:complexType name="performanceTable">
		<xs:annotation>
			<xs:documentation>A crosstable alternatives x criteria showing the performances of the alternatives on the criteria.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" minOccurs="0" type="xmcda:description"/>
			<xs:element name="alternativePerformances" minOccurs="1" maxOccurs="unbounded" type="xmcda:alternativeOnCriteriaPerformances"/>
		</xs:sequence>
		<xs:attributeGroup ref="xmcda:defaultAttributes"/>
	</xs:complexType>
	
	<xs:complexType name="alternativeOnCriteriaPerformances">
		<xs:annotation>
			<xs:documentation>The performances of an alternative on the criteria. Corresponds to a "row" in a performancetable.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="alternativeID" minOccurs="1" maxOccurs="1" type="xs:string"/>
			<xs:element name="performance" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Evaluation of an alternative on a criterion. If the evaluation is not available, put NA.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="description" minOccurs="0" type="xmcda:description"/>
						<xs:element name="criterionID" minOccurs="1" maxOccurs="1" type="xs:string"/>
						<xs:element name="values" type="xmcda:values" minOccurs="1" maxOccurs="1"/>
						
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

</xs:schema>
